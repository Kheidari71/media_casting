{"ast":null,"code":"var _jsxFileName = \"/Users/developmentsigncast.ca/Desktop/caster-final/src/components/Player/Player.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from \"react\";\nimport socket, { requestState, joinSession } from \"../../services/socketService\";\n\n// Player component - minimal UI for displaying media\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Player() {\n  _s();\n  const [currentItem, setCurrentItem] = useState(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [volume, setVolume] = useState(1);\n  const [isCasting, setIsCasting] = useState(false);\n  const mediaRef = useRef(null);\n  const [bufferingProgress, setBufferingProgress] = useState(0);\n  const [networkState, setNetworkState] = useState('idle');\n  const handleMediaEvents = useCallback(() => {\n    if (!mediaRef.current) return;\n    const video = mediaRef.current;\n    const waitingHandler = () => {\n      setNetworkState('buffering');\n      console.log('Video is waiting, buffering...');\n    };\n    const canPlayHandler = () => {\n      setNetworkState('ready');\n      console.log('Video is ready to play');\n    };\n    const progressHandler = () => {\n      if (video.buffered.length > 0) {\n        const bufferedEnd = video.buffered.end(video.buffered.length - 1);\n        const duration = video.duration;\n        const progress = duration > 0 ? bufferedEnd / duration * 100 : 0;\n        setBufferingProgress(progress);\n      }\n    };\n    video.addEventListener('waiting', waitingHandler);\n    video.addEventListener('canplay', canPlayHandler);\n    video.addEventListener('progress', progressHandler);\n    return () => {\n      video.removeEventListener('waiting', waitingHandler);\n      video.removeEventListener('canplay', canPlayHandler);\n      video.removeEventListener('progress', progressHandler);\n    };\n  }, []);\n  useEffect(() => {\n    if (mediaRef.current && currentItem) {\n      const cleanup = handleMediaEvents();\n      return cleanup;\n    }\n  }, [currentItem, handleMediaEvents]);\n\n  // Check URL for session ID on initial load\n  useEffect(() => {\n    const searchParams = new URLSearchParams(window.location.search);\n    const sessionId = searchParams.get('session');\n    console.log(\"Player detected session ID:\", sessionId);\n    if (sessionId) {\n      joinSession(sessionId);\n    } else {\n      requestState();\n    }\n  }, []);\n\n  // Effect to handle socket events from Caster\n  useEffect(() => {\n    socket.on(\"casting_state\", data => {\n      console.log(\"Received casting state:\", data);\n      setIsCasting(data.isCasting);\n      if (data.isCasting) {\n        // Update all state if casting is active\n        if (data.currentItem) {\n          console.log(\"Setting current item:\", data.currentItem);\n          setCurrentItem(data.currentItem);\n        }\n        if (data.isPlaying !== undefined) setIsPlaying(data.isPlaying);\n        if (data.volume !== undefined) setVolume(data.volume);\n      } else {\n        // Reset state if casting is stopped\n        setCurrentItem(null);\n        setIsPlaying(false);\n      }\n    });\n    socket.on(\"media_change\", data => {\n      console.log(\"Media changed:\", data);\n      setCurrentItem(data.item);\n      setIsPlaying(data.isPlaying);\n    });\n    socket.on(\"playback_state\", data => {\n      console.log(\"Playback state changed:\", data.isPlaying);\n      setIsPlaying(data.isPlaying);\n    });\n    socket.on(\"time_update\", data => {\n      // With proper streaming, we can safely do time updates\n      // but only when significantly out of sync\n      if (mediaRef.current && Math.abs(mediaRef.current.currentTime - data.currentTime) > 5) {\n        mediaRef.current.currentTime = data.currentTime;\n      }\n    });\n    socket.on(\"volume_change\", data => {\n      console.log(\"Volume changed:\", data.volume);\n      setVolume(data.volume);\n      if (mediaRef.current) {\n        mediaRef.current.volume = data.volume;\n      }\n    });\n    return () => {\n      socket.off(\"casting_state\");\n      socket.off(\"media_change\");\n      socket.off(\"playback_state\");\n      socket.off(\"time_update\");\n      socket.off(\"volume_change\");\n    };\n  }, []);\n\n  // Effect to sync media playback state\n  useEffect(() => {\n    if (mediaRef.current && currentItem) {\n      if (isPlaying) {\n        console.log(\"Attempting to play video...\");\n        mediaRef.current.play().then(() => {\n          console.log(\"Playback started successfully\");\n          setNetworkState('playing');\n        }).catch(e => {\n          console.error(\"Playback error:\", e);\n          setNetworkState('error');\n        });\n      } else {\n        mediaRef.current.pause();\n        setNetworkState('paused');\n      }\n    }\n  }, [isPlaying, currentItem]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-screen w-screen bg-black flex flex-col relative\",\n    children: [isCasting && currentItem && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute top-2 right-2 z-10 bg-black/50 text-white p-2 rounded\",\n      children: [networkState === 'buffering' && `Buffering: ${bufferingProgress.toFixed(0)}%`, networkState === 'error' && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-red-500\",\n        children: \"Playback Error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 13\n      }, this), networkState === 'playing' && 'Playing', networkState === 'paused' && 'Paused']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 flex items-center justify-center overflow-hidden\",\n      children: isCasting && currentItem && currentItem.type === \"video\" && /*#__PURE__*/_jsxDEV(\"video\", {\n        ref: mediaRef,\n        src: currentItem.path,\n        className: \"max-h-full max-w-full\",\n        preload: \"auto\",\n        playsInline: true,\n        muted: false,\n        volume: volume,\n        onError: e => {\n          console.error(\"Video error:\", e);\n          setNetworkState('error');\n        }\n        // Improved video attributes for better performance\n        ,\n        buffered: true,\n        disablePictureInPicture: true,\n        controlsList: \"nodownload noplaybackrate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 5\n  }, this);\n}\n_s(Player, \"8HUBxbP4RfycGMiwnRuKuza4DNc=\");\n_c = Player;\nvar _c;\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","socket","requestState","joinSession","jsxDEV","_jsxDEV","Player","_s","currentItem","setCurrentItem","isPlaying","setIsPlaying","volume","setVolume","isCasting","setIsCasting","mediaRef","bufferingProgress","setBufferingProgress","networkState","setNetworkState","handleMediaEvents","current","video","waitingHandler","console","log","canPlayHandler","progressHandler","buffered","length","bufferedEnd","end","duration","progress","addEventListener","removeEventListener","cleanup","searchParams","URLSearchParams","window","location","search","sessionId","get","on","data","undefined","item","Math","abs","currentTime","off","play","then","catch","e","error","pause","className","children","toFixed","fileName","_jsxFileName","lineNumber","columnNumber","type","ref","src","path","preload","playsInline","muted","onError","disablePictureInPicture","controlsList","_c","$RefreshReg$"],"sources":["/Users/developmentsigncast.ca/Desktop/caster-final/src/components/Player/Player.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from \"react\";\nimport socket, { requestState, joinSession } from \"../../services/socketService\";\n\n// Player component - minimal UI for displaying media\nexport default function Player() {\n  const [currentItem, setCurrentItem] = useState(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [volume, setVolume] = useState(1);\n  const [isCasting, setIsCasting] = useState(false);\n  const mediaRef = useRef(null);\n  const [bufferingProgress, setBufferingProgress] = useState(0);\n  const [networkState, setNetworkState] = useState('idle');\n\n  const handleMediaEvents = useCallback(() => {\n    if (!mediaRef.current) return;\n\n    const video = mediaRef.current;\n\n    const waitingHandler = () => {\n      setNetworkState('buffering');\n      console.log('Video is waiting, buffering...');\n    };\n\n    const canPlayHandler = () => {\n      setNetworkState('ready');\n      console.log('Video is ready to play');\n    };\n\n    const progressHandler = () => {\n      if (video.buffered.length > 0) {\n        const bufferedEnd = video.buffered.end(video.buffered.length - 1);\n        const duration = video.duration;\n        const progress = duration > 0 \n          ? (bufferedEnd / duration) * 100 \n          : 0;\n        setBufferingProgress(progress);\n      }\n    };\n\n    video.addEventListener('waiting', waitingHandler);\n    video.addEventListener('canplay', canPlayHandler);\n    video.addEventListener('progress', progressHandler);\n\n    return () => {\n      video.removeEventListener('waiting', waitingHandler);\n      video.removeEventListener('canplay', canPlayHandler);\n      video.removeEventListener('progress', progressHandler);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (mediaRef.current && currentItem) {\n      const cleanup = handleMediaEvents();\n      return cleanup;\n    }\n  }, [currentItem, handleMediaEvents]);\n\n  // Check URL for session ID on initial load\n  useEffect(() => {\n    const searchParams = new URLSearchParams(window.location.search);\n    const sessionId = searchParams.get('session');\n    \n    console.log(\"Player detected session ID:\", sessionId);\n    \n    if (sessionId) {\n      joinSession(sessionId);\n    } else {\n      requestState();\n    }\n  }, []);\n\n  // Effect to handle socket events from Caster\n  useEffect(() => {\n    socket.on(\"casting_state\", (data) => {\n      console.log(\"Received casting state:\", data);\n      setIsCasting(data.isCasting);\n\n      if (data.isCasting) {\n        // Update all state if casting is active\n        if (data.currentItem) {\n          console.log(\"Setting current item:\", data.currentItem);\n          setCurrentItem(data.currentItem);\n        }\n        if (data.isPlaying !== undefined) setIsPlaying(data.isPlaying);\n        if (data.volume !== undefined) setVolume(data.volume);\n      } else {\n        // Reset state if casting is stopped\n        setCurrentItem(null);\n        setIsPlaying(false);\n      }\n    });\n\n    socket.on(\"media_change\", (data) => {\n      console.log(\"Media changed:\", data);\n      setCurrentItem(data.item);\n      setIsPlaying(data.isPlaying);\n    });\n    \n    socket.on(\"playback_state\", (data) => {\n      console.log(\"Playback state changed:\", data.isPlaying);\n      setIsPlaying(data.isPlaying);\n    });\n\n    socket.on(\"time_update\", (data) => {\n      // With proper streaming, we can safely do time updates\n      // but only when significantly out of sync\n      if (mediaRef.current && Math.abs(mediaRef.current.currentTime - data.currentTime) > 5) {\n        mediaRef.current.currentTime = data.currentTime;\n      }\n    });\n\n    socket.on(\"volume_change\", (data) => {\n      console.log(\"Volume changed:\", data.volume);\n      setVolume(data.volume);\n      if (mediaRef.current) {\n        mediaRef.current.volume = data.volume;\n      }\n    });\n\n    return () => {\n      socket.off(\"casting_state\");\n      socket.off(\"media_change\");\n      socket.off(\"playback_state\");\n      socket.off(\"time_update\");\n      socket.off(\"volume_change\");\n    };\n  }, []);\n\n  // Effect to sync media playback state\n  useEffect(() => {\n    if (mediaRef.current && currentItem) {\n      if (isPlaying) {\n        console.log(\"Attempting to play video...\");\n        mediaRef.current.play()\n          .then(() => {\n            console.log(\"Playback started successfully\");\n            setNetworkState('playing');\n          })\n          .catch((e) => {\n            console.error(\"Playback error:\", e);\n            setNetworkState('error');\n          });\n      } else {\n        mediaRef.current.pause();\n        setNetworkState('paused');\n      }\n    }\n  }, [isPlaying, currentItem]);\n\n  return (\n    <div className=\"h-screen w-screen bg-black flex flex-col relative\">\n      {isCasting && currentItem && (\n        <div className=\"absolute top-2 right-2 z-10 bg-black/50 text-white p-2 rounded\">\n          {networkState === 'buffering' && (\n            `Buffering: ${bufferingProgress.toFixed(0)}%`\n          )}\n          {networkState === 'error' && (\n            <span className=\"text-red-500\">Playback Error</span>\n          )}\n          {networkState === 'playing' && 'Playing'}\n          {networkState === 'paused' && 'Paused'}\n        </div>\n      )}\n      <div className=\"flex-1 flex items-center justify-center overflow-hidden\">\n        {isCasting && currentItem && currentItem.type === \"video\" && (\n          <video\n            ref={mediaRef}\n            src={currentItem.path}\n            className=\"max-h-full max-w-full\"\n            preload=\"auto\"\n            playsInline\n            muted={false}\n            volume={volume}\n            onError={(e) => {\n              console.error(\"Video error:\", e);\n              setNetworkState('error');\n            }}\n            // Improved video attributes for better performance\n            buffered\n            disablePictureInPicture\n            controlsList=\"nodownload noplaybackrate\"\n          />\n        )}\n      </div>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}