{"ast":null,"code":"var _jsxFileName = \"/Users/developmentsigncast.ca/Desktop/caster-final/src/components/Player/Player.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport socket, { requestState, joinSession } from \"../../services/socketService\";\n\n// Player component - minimal UI for displaying media\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Player() {\n  _s();\n  const [currentItem, setCurrentItem] = useState(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [volume, setVolume] = useState(1);\n  const [isCasting, setIsCasting] = useState(false);\n  const mediaRef = useRef(null);\n  const [bufferingProgress, setBufferingProgress] = useState(0);\n  const [networkState, setNetworkState] = useState('idle');\n  const handleMediaEvents = useCallback(() => {\n    if (!mediaRef.current) return;\n    const video = mediaRef.current;\n    video.addEventListener('waiting', () => {\n      setNetworkState('buffering');\n      console.log('Video is waiting, buffering...');\n    });\n    video.addEventListener('canplay', () => {\n      setNetworkState('ready');\n      console.log('Video is ready to play');\n    });\n    video.addEventListener('progress', () => {\n      if (video.buffered.length > 0) {\n        const bufferedEnd = video.buffered.end(video.buffered.length - 1);\n        const duration = video.duration;\n        const progress = bufferedEnd / duration * 100;\n        setBufferingProgress(progress);\n      }\n    });\n    return () => {\n      video.removeEventListener('waiting', () => {});\n      video.removeEventListener('canplay', () => {});\n      video.removeEventListener('progress', () => {});\n    };\n  }, []);\n  useEffect(() => {\n    if (mediaRef.current && currentItem) {\n      handleMediaEvents();\n    }\n  }, [currentItem, handleMediaEvents]);\n\n  // Check URL for session ID on initial load\n  useEffect(() => {\n    const searchParams = new URLSearchParams(window.location.search);\n    const sessionId = searchParams.get('session');\n    console.log(\"Player detected session ID:\", sessionId);\n    if (sessionId) {\n      joinSession(sessionId);\n    } else {\n      requestState();\n    }\n  }, []);\n\n  // Effect to handle socket events from Caster\n  useEffect(() => {\n    socket.on(\"casting_state\", data => {\n      console.log(\"Received casting state:\", data);\n      setIsCasting(data.isCasting);\n      if (data.isCasting) {\n        // Update all state if casting is active\n        if (data.currentItem) {\n          console.log(\"Setting current item:\", data.currentItem);\n          setCurrentItem(data.currentItem);\n        }\n        if (data.isPlaying !== undefined) setIsPlaying(data.isPlaying);\n        if (data.volume !== undefined) setVolume(data.volume);\n      } else {\n        // Reset state if casting is stopped\n        setCurrentItem(null);\n        setIsPlaying(false);\n      }\n    });\n    socket.on(\"media_change\", data => {\n      console.log(\"Media changed:\", data);\n      setCurrentItem(data.item);\n      setIsPlaying(data.isPlaying);\n    });\n    socket.on(\"playback_state\", data => {\n      console.log(\"Playback state changed:\", data.isPlaying);\n      setIsPlaying(data.isPlaying);\n    });\n    socket.on(\"time_update\", data => {\n      // With proper streaming, we can safely do time updates\n      // but only when significantly out of sync\n      if (mediaRef.current && Math.abs(mediaRef.current.currentTime - data.currentTime) > 5) {\n        mediaRef.current.currentTime = data.currentTime;\n      }\n    });\n    socket.on(\"volume_change\", data => {\n      console.log(\"Volume changed:\", data.volume);\n      setVolume(data.volume);\n      if (mediaRef.current) {\n        mediaRef.current.volume = data.volume;\n      }\n    });\n    return () => {\n      socket.off(\"casting_state\");\n      socket.off(\"media_change\");\n      socket.off(\"playback_state\");\n      socket.off(\"time_update\");\n      socket.off(\"volume_change\");\n    };\n  }, []);\n\n  // Effect to sync media playback state\n  useEffect(() => {\n    if (mediaRef.current && currentItem) {\n      if (isPlaying) {\n        console.log(\"Attempting to play video...\");\n        mediaRef.current.play().then(() => {\n          console.log(\"Playback started successfully\");\n        }).catch(e => {\n          console.error(\"Playback error:\", e);\n        });\n      } else {\n        mediaRef.current.pause();\n      }\n    }\n  }, [isPlaying, currentItem]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-screen w-screen bg-black flex flex-col relative\",\n    children: [isCasting && currentItem && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute top-2 right-2 z-10 bg-black/50 text-white p-2 rounded\",\n      children: networkState === 'buffering' && `Buffering: ${bufferingProgress.toFixed(0)}%`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 flex items-center justify-center overflow-hidden\",\n      children: isCasting && currentItem && currentItem.type === \"video\" && /*#__PURE__*/_jsxDEV(\"video\", {\n        ref: mediaRef,\n        src: currentItem.path,\n        className: \"max-h-full max-w-full\",\n        preload: \"auto\",\n        playsInline: true,\n        muted: false,\n        autoPlay: isPlaying,\n        volume: volume,\n        onError: e => {\n          console.error(\"Video error:\", e);\n          setNetworkState('error');\n        }\n        // Improved buffering configuration\n        ,\n        buffered: true,\n        disablePictureInPicture: true,\n        controlsList: \"nodownload noplaybackrate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n}\n_s(Player, \"8HUBxbP4RfycGMiwnRuKuza4DNc=\");\n_c = Player;\nvar _c;\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"names":["React","useState","useEffect","useRef","socket","requestState","joinSession","jsxDEV","_jsxDEV","Player","_s","currentItem","setCurrentItem","isPlaying","setIsPlaying","volume","setVolume","isCasting","setIsCasting","mediaRef","bufferingProgress","setBufferingProgress","networkState","setNetworkState","handleMediaEvents","useCallback","current","video","addEventListener","console","log","buffered","length","bufferedEnd","end","duration","progress","removeEventListener","searchParams","URLSearchParams","window","location","search","sessionId","get","on","data","undefined","item","Math","abs","currentTime","off","play","then","catch","e","error","pause","className","children","toFixed","fileName","_jsxFileName","lineNumber","columnNumber","type","ref","src","path","preload","playsInline","muted","autoPlay","onError","disablePictureInPicture","controlsList","_c","$RefreshReg$"],"sources":["/Users/developmentsigncast.ca/Desktop/caster-final/src/components/Player/Player.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport socket, { requestState, joinSession } from \"../../services/socketService\";\n\n// Player component - minimal UI for displaying media\nexport default function Player() {\n  const [currentItem, setCurrentItem] = useState(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [volume, setVolume] = useState(1);\n  const [isCasting, setIsCasting] = useState(false);\n  const mediaRef = useRef(null);\n  const [bufferingProgress, setBufferingProgress] = useState(0);\n  const [networkState, setNetworkState] = useState('idle');\n\n\n  const handleMediaEvents = useCallback(() => {\n    if (!mediaRef.current) return;\n\n    const video = mediaRef.current;\n\n    video.addEventListener('waiting', () => {\n      setNetworkState('buffering');\n      console.log('Video is waiting, buffering...');\n    });\n\n    video.addEventListener('canplay', () => {\n      setNetworkState('ready');\n      console.log('Video is ready to play');\n    });\n\n    video.addEventListener('progress', () => {\n      if (video.buffered.length > 0) {\n        const bufferedEnd = video.buffered.end(video.buffered.length - 1);\n        const duration = video.duration;\n        const progress = (bufferedEnd / duration) * 100;\n        setBufferingProgress(progress);\n      }\n    });\n\n    return () => {\n      video.removeEventListener('waiting', () => {});\n      video.removeEventListener('canplay', () => {});\n      video.removeEventListener('progress', () => {});\n    };\n  }, []);\n\n  useEffect(() => {\n    if (mediaRef.current && currentItem) {\n      handleMediaEvents();\n    }\n  }, [currentItem, handleMediaEvents]);\n\n\n\n  // Check URL for session ID on initial load\n  useEffect(() => {\n    const searchParams = new URLSearchParams(window.location.search);\n    const sessionId = searchParams.get('session');\n    \n    console.log(\"Player detected session ID:\", sessionId);\n    \n    if (sessionId) {\n      joinSession(sessionId);\n    } else {\n      requestState();\n    }\n  }, []);\n\n  // Effect to handle socket events from Caster\n  useEffect(() => {\n    socket.on(\"casting_state\", (data) => {\n      console.log(\"Received casting state:\", data);\n      setIsCasting(data.isCasting);\n\n      if (data.isCasting) {\n        // Update all state if casting is active\n        if (data.currentItem) {\n          console.log(\"Setting current item:\", data.currentItem);\n          setCurrentItem(data.currentItem);\n        }\n        if (data.isPlaying !== undefined) setIsPlaying(data.isPlaying);\n        if (data.volume !== undefined) setVolume(data.volume);\n      } else {\n        // Reset state if casting is stopped\n        setCurrentItem(null);\n        setIsPlaying(false);\n      }\n    });\n\n    socket.on(\"media_change\", (data) => {\n      console.log(\"Media changed:\", data);\n      setCurrentItem(data.item);\n      setIsPlaying(data.isPlaying);\n    });\n    \n    socket.on(\"playback_state\", (data) => {\n      console.log(\"Playback state changed:\", data.isPlaying);\n      setIsPlaying(data.isPlaying);\n    });\n\n    socket.on(\"time_update\", (data) => {\n      // With proper streaming, we can safely do time updates\n      // but only when significantly out of sync\n      if (mediaRef.current && Math.abs(mediaRef.current.currentTime - data.currentTime) > 5) {\n        mediaRef.current.currentTime = data.currentTime;\n      }\n    });\n\n    socket.on(\"volume_change\", (data) => {\n      console.log(\"Volume changed:\", data.volume);\n      setVolume(data.volume);\n      if (mediaRef.current) {\n        mediaRef.current.volume = data.volume;\n      }\n    });\n\n    return () => {\n      socket.off(\"casting_state\");\n      socket.off(\"media_change\");\n      socket.off(\"playback_state\");\n      socket.off(\"time_update\");\n      socket.off(\"volume_change\");\n    };\n  }, []);\n\n  // Effect to sync media playback state\n  useEffect(() => {\n    if (mediaRef.current && currentItem) {\n      if (isPlaying) {\n        console.log(\"Attempting to play video...\");\n        mediaRef.current.play()\n          .then(() => {\n            console.log(\"Playback started successfully\");\n          })\n          .catch((e) => {\n            console.error(\"Playback error:\", e);\n          });\n      } else {\n        mediaRef.current.pause();\n      }\n    }\n  }, [isPlaying, currentItem]);\n\n  return (\n    <div className=\"h-screen w-screen bg-black flex flex-col relative\">\n      {isCasting && currentItem && (\n        <div className=\"absolute top-2 right-2 z-10 bg-black/50 text-white p-2 rounded\">\n          {networkState === 'buffering' && (\n            `Buffering: ${bufferingProgress.toFixed(0)}%`\n          )}\n        </div>\n      )}\n      <div className=\"flex-1 flex items-center justify-center overflow-hidden\">\n        {isCasting && currentItem && currentItem.type === \"video\" && (\n          <video\n            ref={mediaRef}\n            src={currentItem.path}\n            className=\"max-h-full max-w-full\"\n            preload=\"auto\"\n            playsInline\n            muted={false}\n            autoPlay={isPlaying}\n            volume={volume}\n            onError={(e) => {\n              console.error(\"Video error:\", e);\n              setNetworkState('error');\n            }}\n            // Improved buffering configuration\n            buffered\n            disablePictureInPicture\n            controlsList=\"nodownload noplaybackrate\"\n          />\n        )}\n      </div>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}