{"ast":null,"code":"var _jsxFileName = \"/Users/developmentsigncast.ca/Desktop/caster-final/src/components/caster/PlaylistSidebar.jsx\";\nimport React, { useState } from \"react\";\nimport { X, Trash2, ChevronDown, ChevronRight, Folder, Video, Image } from \"lucide-react\";\nimport { formatFileSize } from \"../../utils/mediaUtils\";\nimport { ArrowUp, ArrowDown } from \"lucide-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PlaylistSidebar({\n  directories,\n  playlist,\n  currentIndex,\n  isPlaying,\n  activeDirectory,\n  toggleDirectoryView,\n  removeDirectory,\n  removeFromPlaylist,\n  playMedia,\n  isDatabasePlaylist\n}) {\n  // const [searchTerm, setSearchTerm] = useState(\"\");\n  // const [sortBy, setSortBy] = useState(\"name\");\n  // const [sortOrder, setSortOrder] = useState(\"asc\");\n\n  // Filter and sort playlist items\n  const filteredPlaylist = playlist;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-1/3 bg-gray-900 p-4 flex flex-col\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-between mb-4\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-semibold text-white\",\n        children: isDatabasePlaylist ? \"Database Playlist\" : \"Local Playlist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), !isDatabasePlaylist && directories.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-sm font-medium text-gray-400 mb-2\",\n        children: \"Directories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-1\",\n        children: directories.map(dir => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between bg-gray-800 p-2 rounded\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => toggleDirectoryView(dir.path),\n            className: \"flex items-center space-x-2 text-white hover:text-teal-400\",\n            children: [/*#__PURE__*/_jsxDEV(Folder, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: dir.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => removeDirectory(dir.path),\n            className: \"text-gray-400 hover:text-red-400\",\n            children: /*#__PURE__*/_jsxDEV(X, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 17\n          }, this)]\n        }, dir.path, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 overflow-y-auto\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-1\",\n        children: filteredPlaylist.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `flex items-center justify-between p-2 rounded cursor-pointer ${index === currentIndex ? \"bg-teal-600\" : \"bg-gray-800 hover:bg-gray-700\"}`,\n          onClick: () => playMedia(index),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-2\",\n            children: [item.type === \"video\" ? /*#__PURE__*/_jsxDEV(Video, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(Image, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-white\",\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), !isDatabasePlaylist && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => {\n              e.stopPropagation();\n              removeFromPlaylist(index);\n            },\n            className: \"text-gray-400 hover:text-red-400\",\n            children: /*#__PURE__*/_jsxDEV(X, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }, this)]\n        }, item.path, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_c = PlaylistSidebar;\nvar _c;\n$RefreshReg$(_c, \"PlaylistSidebar\");","map":{"version":3,"names":["React","useState","X","Trash2","ChevronDown","ChevronRight","Folder","Video","Image","formatFileSize","ArrowUp","ArrowDown","jsxDEV","_jsxDEV","PlaylistSidebar","directories","playlist","currentIndex","isPlaying","activeDirectory","toggleDirectoryView","removeDirectory","removeFromPlaylist","playMedia","isDatabasePlaylist","filteredPlaylist","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","dir","onClick","path","size","name","item","index","type","e","stopPropagation","_c","$RefreshReg$"],"sources":["/Users/developmentsigncast.ca/Desktop/caster-final/src/components/caster/PlaylistSidebar.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { X, Trash2, ChevronDown, ChevronRight, Folder, Video, Image } from \"lucide-react\";\nimport { formatFileSize } from \"../../utils/mediaUtils\";\nimport { ArrowUp, ArrowDown } from \"lucide-react\";\n\nexport default function PlaylistSidebar({\n  directories,\n  playlist,\n  currentIndex,\n  isPlaying,\n  activeDirectory,\n  toggleDirectoryView,\n  removeDirectory,\n  removeFromPlaylist,\n  playMedia,\n  isDatabasePlaylist\n}) {\n  // const [searchTerm, setSearchTerm] = useState(\"\");\n  // const [sortBy, setSortBy] = useState(\"name\");\n  // const [sortOrder, setSortOrder] = useState(\"asc\");\n\n  // Filter and sort playlist items\n  const filteredPlaylist = playlist;\n\n  return (\n    <div className=\"w-1/3 bg-gray-900 p-4 flex flex-col\">\n      <div className=\"flex items-center justify-between mb-4\">\n        <h2 className=\"text-xl font-semibold text-white\">\n          {isDatabasePlaylist ? \"Database Playlist\" : \"Local Playlist\"}\n        </h2>\n      </div>\n\n      {!isDatabasePlaylist && directories.length > 0 && (\n        <div className=\"mb-4\">\n          <h3 className=\"text-sm font-medium text-gray-400 mb-2\">Directories</h3>\n          <div className=\"space-y-1\">\n            {directories.map((dir) => (\n              <div\n                key={dir.path}\n                className=\"flex items-center justify-between bg-gray-800 p-2 rounded\"\n              >\n                <button\n                  onClick={() => toggleDirectoryView(dir.path)}\n                  className=\"flex items-center space-x-2 text-white hover:text-teal-400\"\n                >\n                  <Folder size={16} />\n                  <span>{dir.name}</span>\n                </button>\n                <button\n                  onClick={() => removeDirectory(dir.path)}\n                  className=\"text-gray-400 hover:text-red-400\"\n                >\n                  <X size={16} />\n                </button>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n\n      <div className=\"flex-1 overflow-y-auto\">\n        <div className=\"space-y-1\">\n          {filteredPlaylist.map((item, index) => (\n            <div\n              key={item.path}\n              className={`flex items-center justify-between p-2 rounded cursor-pointer ${\n                index === currentIndex\n                  ? \"bg-teal-600\"\n                  : \"bg-gray-800 hover:bg-gray-700\"\n              }`}\n              onClick={() => playMedia(index)}\n            >\n              <div className=\"flex items-center space-x-2\">\n                {item.type === \"video\" ? (\n                  <Video size={16} />\n                ) : (\n                  <Image size={16} />\n                )}\n                <span className=\"text-white\">{item.name}</span>\n              </div>\n              {!isDatabasePlaylist && (\n                <button\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    removeFromPlaylist(index);\n                  }}\n                  className=\"text-gray-400 hover:text-red-400\"\n                >\n                  <X size={16} />\n                </button>\n              )}\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}