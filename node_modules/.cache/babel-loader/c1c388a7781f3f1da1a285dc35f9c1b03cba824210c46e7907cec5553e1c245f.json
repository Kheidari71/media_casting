{"ast":null,"code":"var _jsxFileName = \"/Users/developmentsigncast.ca/Desktop/caster-final/src/components/Player/Player.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from \"react\";\nimport socket, { requestState, joinSession } from \"../../services/socketService\";\n\n// Player component - minimal UI for displaying media\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Player() {\n  _s();\n  const [currentItem, setCurrentItem] = useState(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [volume, setVolume] = useState(1);\n  const [isCasting, setIsCasting] = useState(false);\n  const mediaRef = useRef(null);\n  const [bufferingProgress, setBufferingProgress] = useState(0);\n  const [networkState, setNetworkState] = useState('idle');\n  const lastPlaybackStateRef = useRef({\n    playing: false,\n    time: 0\n  });\n  const handleMediaEvents = useCallback(() => {\n    if (!mediaRef.current) return;\n    const video = mediaRef.current;\n    const waitingHandler = () => {\n      setNetworkState('buffering');\n      console.log('Video is waiting, buffering...');\n    };\n    const canPlayHandler = () => {\n      setNetworkState('ready');\n      console.log('Video is ready to play');\n    };\n    const progressHandler = () => {\n      if (video.buffered.length > 0) {\n        const bufferedEnd = video.buffered.end(video.buffered.length - 1);\n        const duration = video.duration;\n        const progress = duration > 0 ? bufferedEnd / duration * 100 : 0;\n        setBufferingProgress(progress);\n      }\n    };\n    const errorHandler = e => {\n      console.error('Video playback error:', e);\n      setNetworkState('error');\n    };\n    video.addEventListener('waiting', waitingHandler);\n    video.addEventListener('canplay', canPlayHandler);\n    video.addEventListener('progress', progressHandler);\n    video.addEventListener('error', errorHandler);\n    return () => {\n      video.removeEventListener('waiting', waitingHandler);\n      video.removeEventListener('canplay', canPlayHandler);\n      video.removeEventListener('progress', progressHandler);\n      video.removeEventListener('error', errorHandler);\n    };\n  }, []);\n  useEffect(() => {\n    if (mediaRef.current && currentItem) {\n      const cleanup = handleMediaEvents();\n      return cleanup;\n    }\n  }, [currentItem, handleMediaEvents]);\n\n  // Check URL for session ID on initial load\n  useEffect(() => {\n    const searchParams = new URLSearchParams(window.location.search);\n    const sessionId = searchParams.get('session');\n    console.log(\"Player detected session ID:\", sessionId);\n    if (sessionId) {\n      joinSession(sessionId);\n    } else {\n      requestState();\n    }\n  }, []);\n\n  // Advanced time synchronization\n  const synchronizeTime = useCallback(data => {\n    if (!mediaRef.current) return;\n    const video = mediaRef.current;\n    const {\n      currentTime,\n      timestamp,\n      isSeeking\n    } = data;\n\n    // Calculate network delay\n    const networkDelay = Date.now() - timestamp;\n    const adjustedTime = currentTime + networkDelay / 1000;\n\n    // More aggressive sync for manual seeks\n    if (isSeeking) {\n      try {\n        video.pause();\n        video.currentTime = adjustedTime;\n\n        // Resume playback after a short delay\n        setTimeout(() => {\n          video.play().catch(error => {\n            console.error('Resync playback error:', error);\n            setNetworkState('error');\n          });\n        }, 100);\n      } catch (error) {\n        console.error('Time synchronization error:', error);\n        setNetworkState('error');\n      }\n      return;\n    }\n\n    // Regular sync logic for non-seek updates\n    const timeDifference = Math.abs(video.currentTime - adjustedTime);\n    if (timeDifference > 1) {\n      try {\n        // For small differences, adjust smoothly\n        if (timeDifference < 5) {\n          video.currentTime = adjustedTime;\n        } else {\n          // For larger differences, use more aggressive sync\n          video.pause();\n          video.currentTime = adjustedTime;\n\n          // Attempt to resume after a short delay\n          setTimeout(() => {\n            video.play().catch(error => {\n              console.error('Resync playback error:', error);\n              setNetworkState('error');\n            });\n          }, 500);\n        }\n        console.log(`Synchronized video. Time difference: ${timeDifference.toFixed(2)} seconds`);\n      } catch (error) {\n        console.error('Time synchronization error:', error);\n        setNetworkState('error');\n      }\n    }\n  }, []);\n\n  // Effect to handle socket events from Caster\n  useEffect(() => {\n    const castingStateHandler = data => {\n      console.log(\"Received casting state:\", data);\n      setIsCasting(data.isCasting);\n      if (data.isCasting) {\n        // Update all state if casting is active\n        if (data.currentItem) {\n          console.log(\"Setting current item:\", data.currentItem);\n          setCurrentItem(data.currentItem);\n        }\n        if (data.isPlaying !== undefined) setIsPlaying(data.isPlaying);\n        if (data.volume !== undefined) setVolume(data.volume);\n      } else {\n        // Reset state if casting is stopped\n        setCurrentItem(null);\n        setIsPlaying(false);\n      }\n    };\n    const mediaChangeHandler = data => {\n      console.log(\"Media changed:\", data);\n      setCurrentItem(data.item);\n      setIsPlaying(data.isPlaying);\n    };\n    const playbackStateHandler = data => {\n      console.log(\"Playback state changed:\", data.isPlaying);\n      setIsPlaying(data.isPlaying);\n    };\n    const timeUpdateHandler = data => {\n      // More robust time synchronization\n      synchronizeTime(data);\n    };\n    const volumeChangeHandler = data => {\n      console.log(\"Volume changed:\", data.volume);\n      setVolume(data.volume);\n      if (mediaRef.current) {\n        mediaRef.current.volume = data.volume;\n      }\n    };\n\n    // Attach event listeners\n    socket.on(\"casting_state\", castingStateHandler);\n    socket.on(\"media_change\", mediaChangeHandler);\n    socket.on(\"playback_state\", playbackStateHandler);\n    socket.on(\"time_update\", timeUpdateHandler);\n    socket.on(\"volume_change\", volumeChangeHandler);\n\n    // Cleanup function\n    return () => {\n      socket.off(\"casting_state\", castingStateHandler);\n      socket.off(\"media_change\", mediaChangeHandler);\n      socket.off(\"playback_state\", playbackStateHandler);\n      socket.off(\"time_update\", timeUpdateHandler);\n      socket.off(\"volume_change\", volumeChangeHandler);\n    };\n  }, [synchronizeTime]);\n\n  // Effect to sync media playback state\n  useEffect(() => {\n    if (mediaRef.current && currentItem) {\n      const video = mediaRef.current;\n      const playVideo = () => {\n        video.play().then(() => {\n          console.log(\"Playback started successfully\");\n          setNetworkState('playing');\n          lastPlaybackStateRef.current = {\n            playing: true,\n            time: video.currentTime\n          };\n        }).catch(e => {\n          console.error(\"Playback error:\", e);\n          setNetworkState('error');\n\n          // Attempt recovery\n          if (e.name === 'NotAllowedError') {\n            // Likely autoplay prevention\n            video.muted = true;\n            video.play().catch(console.error);\n          }\n        });\n      };\n      const pauseVideo = () => {\n        video.pause();\n        setNetworkState('paused');\n        lastPlaybackStateRef.current = {\n          playing: false,\n          time: video.currentTime\n        };\n      };\n      if (isPlaying) {\n        console.log(\"Attempting to play video...\");\n        playVideo();\n      } else {\n        pauseVideo();\n      }\n    }\n  }, [isPlaying, currentItem]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-screen w-screen bg-black flex flex-col relative\",\n    children: [isCasting && currentItem && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute top-2 right-2 z-10 bg-black/50 text-white p-2 rounded\",\n      children: [networkState === 'buffering' && `Buffering: ${bufferingProgress.toFixed(0)}%`, networkState === 'error' && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-red-500\",\n        children: \"Playback Error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 13\n      }, this), networkState === 'playing' && 'Playing', networkState === 'paused' && 'Paused']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 flex items-center justify-center overflow-hidden\",\n      children: isCasting && currentItem && currentItem.type === \"video\" && /*#__PURE__*/_jsxDEV(\"video\", {\n        ref: mediaRef,\n        src: currentItem.path,\n        className: \"max-h-full max-w-full\",\n        preload: \"auto\",\n        playsInline: true,\n        muted: false,\n        volume: volume,\n        onError: e => {\n          console.error(\"Video error:\", e);\n          setNetworkState('error');\n        }\n        // Improved video attributes for better performance\n        ,\n        buffered: true,\n        disablePictureInPicture: true,\n        controlsList: \"nodownload noplaybackrate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 250,\n    columnNumber: 5\n  }, this);\n}\n_s(Player, \"UUhZcb/dOWHiUwxHbGU+EkPnUKc=\");\n_c = Player;\nvar _c;\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","socket","requestState","joinSession","jsxDEV","_jsxDEV","Player","_s","currentItem","setCurrentItem","isPlaying","setIsPlaying","volume","setVolume","isCasting","setIsCasting","mediaRef","bufferingProgress","setBufferingProgress","networkState","setNetworkState","lastPlaybackStateRef","playing","time","handleMediaEvents","current","video","waitingHandler","console","log","canPlayHandler","progressHandler","buffered","length","bufferedEnd","end","duration","progress","errorHandler","e","error","addEventListener","removeEventListener","cleanup","searchParams","URLSearchParams","window","location","search","sessionId","get","synchronizeTime","data","currentTime","timestamp","isSeeking","networkDelay","Date","now","adjustedTime","pause","setTimeout","play","catch","timeDifference","Math","abs","toFixed","castingStateHandler","undefined","mediaChangeHandler","item","playbackStateHandler","timeUpdateHandler","volumeChangeHandler","on","off","playVideo","then","name","muted","pauseVideo","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","ref","src","path","preload","playsInline","onError","disablePictureInPicture","controlsList","_c","$RefreshReg$"],"sources":["/Users/developmentsigncast.ca/Desktop/caster-final/src/components/Player/Player.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from \"react\";\nimport socket, { requestState, joinSession } from \"../../services/socketService\";\n\n// Player component - minimal UI for displaying media\nexport default function Player() {\n  const [currentItem, setCurrentItem] = useState(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [volume, setVolume] = useState(1);\n  const [isCasting, setIsCasting] = useState(false);\n  const mediaRef = useRef(null);\n  const [bufferingProgress, setBufferingProgress] = useState(0);\n  const [networkState, setNetworkState] = useState('idle');\n  const lastPlaybackStateRef = useRef({ playing: false, time: 0 });\n\n  const handleMediaEvents = useCallback(() => {\n    if (!mediaRef.current) return;\n\n    const video = mediaRef.current;\n\n    const waitingHandler = () => {\n      setNetworkState('buffering');\n      console.log('Video is waiting, buffering...');\n    };\n\n    const canPlayHandler = () => {\n      setNetworkState('ready');\n      console.log('Video is ready to play');\n    };\n\n    const progressHandler = () => {\n      if (video.buffered.length > 0) {\n        const bufferedEnd = video.buffered.end(video.buffered.length - 1);\n        const duration = video.duration;\n        const progress = duration > 0 \n          ? (bufferedEnd / duration) * 100 \n          : 0;\n        setBufferingProgress(progress);\n      }\n    };\n\n    const errorHandler = (e) => {\n      console.error('Video playback error:', e);\n      setNetworkState('error');\n    };\n\n    video.addEventListener('waiting', waitingHandler);\n    video.addEventListener('canplay', canPlayHandler);\n    video.addEventListener('progress', progressHandler);\n    video.addEventListener('error', errorHandler);\n\n    return () => {\n      video.removeEventListener('waiting', waitingHandler);\n      video.removeEventListener('canplay', canPlayHandler);\n      video.removeEventListener('progress', progressHandler);\n      video.removeEventListener('error', errorHandler);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (mediaRef.current && currentItem) {\n      const cleanup = handleMediaEvents();\n      return cleanup;\n    }\n  }, [currentItem, handleMediaEvents]);\n\n  // Check URL for session ID on initial load\n  useEffect(() => {\n    const searchParams = new URLSearchParams(window.location.search);\n    const sessionId = searchParams.get('session');\n    \n    console.log(\"Player detected session ID:\", sessionId);\n    \n    if (sessionId) {\n      joinSession(sessionId);\n    } else {\n      requestState();\n    }\n  }, []);\n\n  // Advanced time synchronization\n  const synchronizeTime = useCallback((data) => {\n    if (!mediaRef.current) return;\n\n    const video = mediaRef.current;\n    const { currentTime, timestamp, isSeeking } = data;\n\n    // Calculate network delay\n    const networkDelay = Date.now() - timestamp;\n    const adjustedTime = currentTime + (networkDelay / 1000);\n\n    // More aggressive sync for manual seeks\n    if (isSeeking) {\n      try {\n        video.pause();\n        video.currentTime = adjustedTime;\n        \n        // Resume playback after a short delay\n        setTimeout(() => {\n          video.play().catch(error => {\n            console.error('Resync playback error:', error);\n            setNetworkState('error');\n          });\n        }, 100);\n      } catch (error) {\n        console.error('Time synchronization error:', error);\n        setNetworkState('error');\n      }\n      return;\n    }\n\n    // Regular sync logic for non-seek updates\n    const timeDifference = Math.abs(video.currentTime - adjustedTime);\n    \n    if (timeDifference > 1) {\n      try {\n        // For small differences, adjust smoothly\n        if (timeDifference < 5) {\n          video.currentTime = adjustedTime;\n        } else {\n          // For larger differences, use more aggressive sync\n          video.pause();\n          video.currentTime = adjustedTime;\n          \n          // Attempt to resume after a short delay\n          setTimeout(() => {\n            video.play().catch(error => {\n              console.error('Resync playback error:', error);\n              setNetworkState('error');\n            });\n          }, 500);\n        }\n\n        console.log(`Synchronized video. Time difference: ${timeDifference.toFixed(2)} seconds`);\n      } catch (error) {\n        console.error('Time synchronization error:', error);\n        setNetworkState('error');\n      }\n    }\n  }, []);\n\n  // Effect to handle socket events from Caster\n  useEffect(() => {\n    const castingStateHandler = (data) => {\n      console.log(\"Received casting state:\", data);\n      setIsCasting(data.isCasting);\n\n      if (data.isCasting) {\n        // Update all state if casting is active\n        if (data.currentItem) {\n          console.log(\"Setting current item:\", data.currentItem);\n          setCurrentItem(data.currentItem);\n        }\n        if (data.isPlaying !== undefined) setIsPlaying(data.isPlaying);\n        if (data.volume !== undefined) setVolume(data.volume);\n      } else {\n        // Reset state if casting is stopped\n        setCurrentItem(null);\n        setIsPlaying(false);\n      }\n    };\n\n    const mediaChangeHandler = (data) => {\n      console.log(\"Media changed:\", data);\n      setCurrentItem(data.item);\n      setIsPlaying(data.isPlaying);\n    };\n\n    const playbackStateHandler = (data) => {\n      console.log(\"Playback state changed:\", data.isPlaying);\n      setIsPlaying(data.isPlaying);\n    };\n\n    const timeUpdateHandler = (data) => {\n      // More robust time synchronization\n      synchronizeTime(data);\n    };\n\n    const volumeChangeHandler = (data) => {\n      console.log(\"Volume changed:\", data.volume);\n      setVolume(data.volume);\n      if (mediaRef.current) {\n        mediaRef.current.volume = data.volume;\n      }\n    };\n\n    // Attach event listeners\n    socket.on(\"casting_state\", castingStateHandler);\n    socket.on(\"media_change\", mediaChangeHandler);\n    socket.on(\"playback_state\", playbackStateHandler);\n    socket.on(\"time_update\", timeUpdateHandler);\n    socket.on(\"volume_change\", volumeChangeHandler);\n\n    // Cleanup function\n    return () => {\n      socket.off(\"casting_state\", castingStateHandler);\n      socket.off(\"media_change\", mediaChangeHandler);\n      socket.off(\"playback_state\", playbackStateHandler);\n      socket.off(\"time_update\", timeUpdateHandler);\n      socket.off(\"volume_change\", volumeChangeHandler);\n    };\n  }, [synchronizeTime]);\n\n  // Effect to sync media playback state\n  useEffect(() => {\n    if (mediaRef.current && currentItem) {\n      const video = mediaRef.current;\n      \n      const playVideo = () => {\n        video.play()\n          .then(() => {\n            console.log(\"Playback started successfully\");\n            setNetworkState('playing');\n            lastPlaybackStateRef.current = { \n              playing: true, \n              time: video.currentTime \n            };\n          })\n          .catch((e) => {\n            console.error(\"Playback error:\", e);\n            setNetworkState('error');\n            \n            // Attempt recovery\n            if (e.name === 'NotAllowedError') {\n              // Likely autoplay prevention\n              video.muted = true;\n              video.play().catch(console.error);\n            }\n          });\n      };\n\n      const pauseVideo = () => {\n        video.pause();\n        setNetworkState('paused');\n        lastPlaybackStateRef.current = { \n          playing: false, \n          time: video.currentTime \n        };\n      };\n\n      if (isPlaying) {\n        console.log(\"Attempting to play video...\");\n        playVideo();\n      } else {\n        pauseVideo();\n      }\n    }\n  }, [isPlaying, currentItem]);\n\n  return (\n    <div className=\"h-screen w-screen bg-black flex flex-col relative\">\n      {isCasting && currentItem && (\n        <div className=\"absolute top-2 right-2 z-10 bg-black/50 text-white p-2 rounded\">\n          {networkState === 'buffering' && (\n            `Buffering: ${bufferingProgress.toFixed(0)}%`\n          )}\n          {networkState === 'error' && (\n            <span className=\"text-red-500\">Playback Error</span>\n          )}\n          {networkState === 'playing' && 'Playing'}\n          {networkState === 'paused' && 'Paused'}\n        </div>\n      )}\n      <div className=\"flex-1 flex items-center justify-center overflow-hidden\">\n        {isCasting && currentItem && currentItem.type === \"video\" && (\n          <video\n            ref={mediaRef}\n            src={currentItem.path}\n            className=\"max-h-full max-w-full\"\n            preload=\"auto\"\n            playsInline\n            muted={false}\n            volume={volume}\n            onError={(e) => {\n              console.error(\"Video error:\", e);\n              setNetworkState('error');\n            }}\n            // Improved video attributes for better performance\n            buffered\n            disablePictureInPicture\n            controlsList=\"nodownload noplaybackrate\"\n          />\n        )}\n      </div>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}