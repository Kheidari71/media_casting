{"ast":null,"code":"var _jsxFileName = \"/Users/developmentsigncast.ca/Desktop/caster-final/src/components/Player/Player.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport socket, { requestState, joinSession } from \"../../services/socketService\";\n\n// Player component - minimal UI for displaying media\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Player() {\n  _s();\n  const [currentItem, setCurrentItem] = useState(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [volume, setVolume] = useState(1);\n  const [isCasting, setIsCasting] = useState(false);\n  const mediaRef = useRef(null);\n\n  // Check URL for session ID on initial load\n  useEffect(() => {\n    const searchParams = new URLSearchParams(window.location.search);\n    const sessionId = searchParams.get(\"session\");\n    console.log(\"Player detected session ID:\", sessionId);\n    if (sessionId) {\n      joinSession(sessionId);\n    } else {\n      requestState();\n    }\n  }, []);\n\n  // Effect to handle socket events from Caster\n  useEffect(() => {\n    socket.on(\"casting_state\", data => {\n      console.log(\"Received casting state:\", data);\n      setIsCasting(data.isCasting);\n      if (data.isCasting) {\n        // Update all state if casting is active\n        if (data.currentItem) setCurrentItem(data.currentItem);\n        if (data.isPlaying !== undefined) setIsPlaying(data.isPlaying);\n        if (data.volume !== undefined) setVolume(data.volume);\n      } else {\n        // Reset state if casting is stopped\n        setCurrentItem(null);\n        setIsPlaying(false);\n      }\n    });\n    socket.on(\"media_change\", data => {\n      console.log(\"Media changed:\", data);\n      setCurrentItem(data.item);\n      setIsPlaying(data.isPlaying);\n    });\n    socket.on(\"playback_state\", data => {\n      console.log(\"Playback state changed:\", data.isPlaying);\n      setIsPlaying(data.isPlaying);\n    });\n    socket.on(\"time_update\", data => {\n      // No seeking during playback - only update our local state\n      // for display purposes if needed\n    });\n    socket.on(\"volume_change\", data => {\n      console.log(\"Volume changed:\", data.volume);\n      setVolume(data.volume);\n      if (mediaRef.current) {\n        mediaRef.current.volume = data.volume;\n      }\n    });\n    return () => {\n      socket.off(\"casting_state\");\n      socket.off(\"media_change\");\n      socket.off(\"playback_state\");\n      socket.off(\"time_update\");\n      socket.off(\"volume_change\");\n    };\n  }, []);\n\n  // Effect to sync media playback state\n  useEffect(() => {\n    if (mediaRef.current && currentItem) {\n      if (isPlaying) {\n        console.log(\"Attempting to play video...\");\n\n        // Use a small timeout to ensure the video has time to initialize\n        setTimeout(() => {\n          if (mediaRef.current) {\n            mediaRef.current.play().then(() => {\n              console.log(\"Playback started successfully\");\n            }).catch(e => {\n              console.error(\"Playback error:\", e);\n            });\n          }\n        }, 100);\n      } else {\n        mediaRef.current.pause();\n      }\n    }\n  }, [isPlaying, currentItem]);\n  const handleEnded = () => {\n    console.log(\"Media playback ended\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-screen w-screen bg-black flex flex-col relative\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 flex items-center justify-center overflow-hidden\",\n      children: isCasting ? currentItem && currentItem.type === \"video\" ? /*#__PURE__*/_jsxDEV(\"video\", {\n        ref: mediaRef,\n        src: \"https://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4\",\n        className: \"max-h-full max-w-full\",\n        preload: \"auto\",\n        playsInline: true,\n        autoPlay: isPlaying,\n        controls: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }, this) : currentItem && currentItem.type === \"image\" ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: currentItem.path,\n        alt: currentItem.name,\n        className: \"max-h-full max-w-full object-contain\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-gray-500\",\n        children: \"Waiting for media...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center p-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-4xl text-gray-500 mb-4\",\n          children: \"Waiting for Cast\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-400\",\n          children: \"The caster needs to press \\\"Start Casting\\\" to begin streaming content to this player.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n}\n_s(Player, \"XVkkT49u+7IbI+m90cV1mzkZWrk=\");\n_c = Player;\nvar _c;\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"names":["React","useState","useEffect","useRef","socket","requestState","joinSession","jsxDEV","_jsxDEV","Player","_s","currentItem","setCurrentItem","isPlaying","setIsPlaying","volume","setVolume","isCasting","setIsCasting","mediaRef","searchParams","URLSearchParams","window","location","search","sessionId","get","console","log","on","data","undefined","item","current","off","setTimeout","play","then","catch","e","error","pause","handleEnded","className","children","type","ref","src","preload","playsInline","autoPlay","controls","fileName","_jsxFileName","lineNumber","columnNumber","path","alt","name","_c","$RefreshReg$"],"sources":["/Users/developmentsigncast.ca/Desktop/caster-final/src/components/Player/Player.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport socket, {\n  requestState,\n  joinSession,\n} from \"../../services/socketService\";\n\n// Player component - minimal UI for displaying media\nexport default function Player() {\n  const [currentItem, setCurrentItem] = useState(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [volume, setVolume] = useState(1);\n  const [isCasting, setIsCasting] = useState(false);\n  const mediaRef = useRef(null);\n\n  // Check URL for session ID on initial load\n  useEffect(() => {\n    const searchParams = new URLSearchParams(window.location.search);\n    const sessionId = searchParams.get(\"session\");\n\n    console.log(\"Player detected session ID:\", sessionId);\n\n    if (sessionId) {\n      joinSession(sessionId);\n    } else {\n      requestState();\n    }\n  }, []);\n\n  // Effect to handle socket events from Caster\n  useEffect(() => {\n    socket.on(\"casting_state\", (data) => {\n      console.log(\"Received casting state:\", data);\n      setIsCasting(data.isCasting);\n\n      if (data.isCasting) {\n        // Update all state if casting is active\n        if (data.currentItem) setCurrentItem(data.currentItem);\n        if (data.isPlaying !== undefined) setIsPlaying(data.isPlaying);\n        if (data.volume !== undefined) setVolume(data.volume);\n      } else {\n        // Reset state if casting is stopped\n        setCurrentItem(null);\n        setIsPlaying(false);\n      }\n    });\n\n    socket.on(\"media_change\", (data) => {\n      console.log(\"Media changed:\", data);\n      setCurrentItem(data.item);\n      setIsPlaying(data.isPlaying);\n    });\n\n    socket.on(\"playback_state\", (data) => {\n      console.log(\"Playback state changed:\", data.isPlaying);\n      setIsPlaying(data.isPlaying);\n    });\n\n    socket.on(\"time_update\", (data) => {\n      // No seeking during playback - only update our local state\n      // for display purposes if needed\n    });\n\n    socket.on(\"volume_change\", (data) => {\n      console.log(\"Volume changed:\", data.volume);\n      setVolume(data.volume);\n      if (mediaRef.current) {\n        mediaRef.current.volume = data.volume;\n      }\n    });\n\n    return () => {\n      socket.off(\"casting_state\");\n      socket.off(\"media_change\");\n      socket.off(\"playback_state\");\n      socket.off(\"time_update\");\n      socket.off(\"volume_change\");\n    };\n  }, []);\n\n  // Effect to sync media playback state\n  useEffect(() => {\n    if (mediaRef.current && currentItem) {\n      if (isPlaying) {\n        console.log(\"Attempting to play video...\");\n\n        // Use a small timeout to ensure the video has time to initialize\n        setTimeout(() => {\n          if (mediaRef.current) {\n            mediaRef.current\n              .play()\n              .then(() => {\n                console.log(\"Playback started successfully\");\n              })\n              .catch((e) => {\n                console.error(\"Playback error:\", e);\n              });\n          }\n        }, 100);\n      } else {\n        mediaRef.current.pause();\n      }\n    }\n  }, [isPlaying, currentItem]);\n\n  const handleEnded = () => {\n    console.log(\"Media playback ended\");\n  };\n\n  return (\n    <div className=\"h-screen w-screen bg-black flex flex-col relative\">\n      <div className=\"flex-1 flex items-center justify-center overflow-hidden\">\n        {isCasting ? (\n          currentItem && currentItem.type === \"video\" ? (\n            <video\n              ref={mediaRef}\n              src=\"https://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4\"\n              className=\"max-h-full max-w-full\"\n              preload=\"auto\"\n              playsInline\n              autoPlay={isPlaying}\n              controls={true}\n            />\n          ) : currentItem && currentItem.type === \"image\" ? (\n            <img\n              src={currentItem.path}\n              alt={currentItem.name}\n              className=\"max-h-full max-w-full object-contain\"\n            />\n          ) : (\n            <div className=\"text-gray-500\">Waiting for media...</div>\n          )\n        ) : (\n          <div className=\"text-center p-8\">\n            <div className=\"text-4xl text-gray-500 mb-4\">Waiting for Cast</div>\n            <p className=\"text-gray-400\">\n              The caster needs to press \"Start Casting\" to begin streaming\n              content to this player.\n            </p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}